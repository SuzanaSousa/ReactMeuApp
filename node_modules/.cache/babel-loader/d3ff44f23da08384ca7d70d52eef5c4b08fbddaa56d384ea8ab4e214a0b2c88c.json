{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\php_fatec\\\\arquivos_site\\\\ReactMeuApp\\\\ReactMeuApp\\\\src\\\\Jogo\\\\Game\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from '../Board';\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const fruits = ['apple', 'orange', 'banana', 'grape', 'cherry', 'watermelon', 'kiwi', 'lemon'];\n  const generateRandomFruits = () => {\n    const randomFruits = [...fruits, ...fruits].sort(() => Math.random() - 0.5);\n    return randomFruits.map((fruit, index) => ({\n      id: index,\n      fruit,\n      isFlipped: false\n    }));\n  };\n  useEffect(() => {\n    const initialCards = generateRandomFruits();\n    setCards(initialCards);\n  }, []);\n  const handleCardClick = id => {\n    if (flippedIndices.length < 2 && !flippedIndices.includes(id)) {\n      const newFlippedIndices = [...flippedIndices, id];\n      setFlippedIndices(newFlippedIndices);\n      if (newFlippedIndices.length === 2) {\n        const [firstId, secondId] = newFlippedIndices;\n        if (cards[firstId].fruit === cards[secondId].fruit) {\n          setMatchedPairs([...matchedPairs, cards[firstId].fruit]);\n        }\n        setTimeout(() => setFlippedIndices([]), 1000);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fruit Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      cards: cards,\n      onCardClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Xr7mTYGLZgkR9/gOMcpxCp3Npy4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","Game","_s","cards","setCards","flippedIndices","setFlippedIndices","matchedPairs","setMatchedPairs","fruits","generateRandomFruits","randomFruits","sort","Math","random","map","fruit","index","id","isFlipped","initialCards","handleCardClick","length","includes","newFlippedIndices","firstId","secondId","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/php_fatec/arquivos_site/ReactMeuApp/ReactMeuApp/src/Jogo/Game/index.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Board from '../Board';\r\nimport \"../index.css\";\r\n\r\nconst Game = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [flippedIndices, setFlippedIndices] = useState([]);\r\n  const [matchedPairs, setMatchedPairs] = useState([]);\r\n\r\n  const fruits = ['apple', 'orange', 'banana', 'grape', 'cherry', 'watermelon', 'kiwi', 'lemon'];\r\n\r\n  const generateRandomFruits = () => {\r\n    const randomFruits = [...fruits, ...fruits].sort(() => Math.random() - 0.5);\r\n    return randomFruits.map((fruit, index) => ({\r\n      id: index,\r\n      fruit,\r\n      isFlipped: false,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialCards = generateRandomFruits();\r\n    setCards(initialCards);\r\n  }, []);\r\n\r\n  const handleCardClick = (id) => {\r\n    if (flippedIndices.length < 2 && !flippedIndices.includes(id)) {\r\n      const newFlippedIndices = [...flippedIndices, id];\r\n      setFlippedIndices(newFlippedIndices);\r\n\r\n      if (newFlippedIndices.length === 2) {\r\n        const [firstId, secondId] = newFlippedIndices;\r\n        if (cards[firstId].fruit === cards[secondId].fruit) {\r\n          setMatchedPairs([...matchedPairs, cards[firstId].fruit]);\r\n        }\r\n        setTimeout(() => setFlippedIndices([]), 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <h1>Fruit Memory Game</h1>\r\n      <Board cards={cards} onCardClick={handleCardClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMa,MAAM,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC;EAE9F,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,YAAY,GAAG,CAAC,GAAGF,MAAM,EAAE,GAAGA,MAAM,CAAC,CAACG,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3E,OAAOH,YAAY,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;MACzCC,EAAE,EAAED,KAAK;MACTD,KAAK;MACLG,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAMuB,YAAY,GAAGV,oBAAoB,CAAC,CAAC;IAC3CN,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAIH,EAAE,IAAK;IAC9B,IAAIb,cAAc,CAACiB,MAAM,GAAG,CAAC,IAAI,CAACjB,cAAc,CAACkB,QAAQ,CAACL,EAAE,CAAC,EAAE;MAC7D,MAAMM,iBAAiB,GAAG,CAAC,GAAGnB,cAAc,EAAEa,EAAE,CAAC;MACjDZ,iBAAiB,CAACkB,iBAAiB,CAAC;MAEpC,IAAIA,iBAAiB,CAACF,MAAM,KAAK,CAAC,EAAE;QAClC,MAAM,CAACG,OAAO,EAAEC,QAAQ,CAAC,GAAGF,iBAAiB;QAC7C,IAAIrB,KAAK,CAACsB,OAAO,CAAC,CAACT,KAAK,KAAKb,KAAK,CAACuB,QAAQ,CAAC,CAACV,KAAK,EAAE;UAClDR,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEJ,KAAK,CAACsB,OAAO,CAAC,CAACT,KAAK,CAAC,CAAC;QAC1D;QACAW,UAAU,CAAC,MAAMrB,iBAAiB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC/C;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEA,KAAM;MAAC+B,WAAW,EAAEb;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA1CID,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}